# This is the main configuration file for the application.
# ~~~~~

play.modules.enabled += "controllers.StartModule"

# Disabled since Safnari is mostly an API based service, not UI
play.filters.disabled += "play.filters.csrf.CSRFFilter"

db.default {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://localhost/nsi-safnari-dev"
  username = nsi-safnari-user
  password = password
  logStatements = false
}

play.http.secret.key="s1?ZNeapUWHEynf;W]Xl4wCjAj?;mcBSqA2JQFjXjo/mI0fI128WWcKsPNhIuqPr"
play.i18n.langs=["en"]

pce {
  actor = dummy
  endpoint = "http://localhost:8400"
  algorithm = chain
}

nsi {
  actor = dummy
  base.url = "http://localhost:9000"
  twoway.tls = false
}

safnari {
  # The NSA identifier and display name of this NSA.
  nsa {
    id = "urn:ogf:network:surfnet.nl:1990:nsa:safnari-dev"
    name = "Safnari Dev"
  }

  # Administrative contact information for this NSA.
  adminContact {
    surname = "Trompert"
    given = "Hans"
    prodid = "safnari"
  }

  # Geographic coordinates for this NSA.
  location {
    longitude = 4.954585
    latitude = 52.3567
  }

  # If this NSA is also a uPA (optional) we add the list of
  # networks the NSA is directly managing.  The `id` parameter
  # is the NML topology identifier for the network, and `url`
  # is the endpoint for retrieving the NML XML file.
  network {
    id = "urn:ogf:network:surfnet.nl:1990:testbed"
    url = "https://bod.acc.dlp.surfnet.nl/nsi-topology"
  }

  # Local Document Discovery Service URL if available.
  #dds {
  #  url = "https://bod.acc.dlp.surfnet.nl/discovery"
  #}

  # NSA to which we have set up an RA -> PA peering relationship
  # with us in the RA role.  The DN values is the ssl certificate
  # Subject.
  #peersWith = [
  #  { id = "urn:ogf:network:es.net:2013:nsa:nsi-aggr-west", dn = "/OU=Domain Control Validated/CN=nsi-aggr-west.es.net" },
  #  { id = "urn:ogf:network:geant.net:2013:nsa", dn = "/C=UK/ST=Cambridge/L=Cambridge/O=Geant/CN=beta-bodv3.geant.net" }
  #]

  # NSA message timeout values.
  async.reply.timeout = 120 seconds

  # How long after the connection end time do connections get
  # deleted from the database.  Due to Akka scheduler implementation
  # this should be less than 248 days or so.
  connection.expiration.time = 1 day
}

# Deployment specific configuration for the nsi-safnari web page.  This
# information is treated as runtime data and not static CSS layout.  For
# static CSS layout configuration look at the app/assets/css/variables.less
# file for customer colour and page layout that is built at compile time.
# ~~~~~
web {
  favicon = "images/favicon.png"
  footer = "SURFnet bv | Postbus 19035, 3501 DA Utrecht | T +31 302 305 305 | F +31 302 305 329 |"
  contactURL = "mailto:admin@surfnet.nl"
  contactText = "admin@surfnet.nl"
}

#web {
#  favicon = "images/esnet-favicon.png"
#  footer = "Lawrence Berkeley National Laboratory | Energy Sciences Network | 1 Cyclotron Road, Mail stop 50A-3111. Berkeley, CA 94720 |"
#  contactURL = "https://www.es.net/contact-us/?"
#  contactText = "Contact Us"
#}

#web {
#  favicon = "images/favicon-icair.png"
#  footer = "International Center for Advanced Research | 750 N. Lake Shore Drive, Suite 600 | Chicago, IL 60611 | "
#  contactURL = "http://www.icair.org/about/visit.html"
#  contactText = "Contact Us"
#}

play.filters.hosts {
  # A list of valid hosts (e.g. "example.com") or suffixes of valid hosts (e.g. ".example.com")
  # Note that ".example.com" will match example.com and any subdomain of example.com, with or without a trailing dot.
  # "." matches all domains, and "" matches an empty or nonexistent host.
  # allowed = ["localhost", ".local", "127.0.0.1"]
  allowed = ["."]
}

play.ws.ssl {
  keyManager = {
    stores = [
      {
        path = "conf/nsi-safnari-keystore.jks"
        type = "JKS"
        password = "changeme"
      }
    ]
  }
  trustManager = {
    stores = [
      {
        path = "conf/nsi-safnari-truststore.jks"
        type = "JKS"
        password = "changeme"
      }
    ]
  }
}
